package com.java.interview;

/*
 * 使用了关键词abstract声明的类叫作“抽象类”。如果一个类里包含了一个或多个抽象方法，类就必须指定成abstract（抽象）。
 * “抽象方法”,属于一种不完整的方法，只含有一个声明，没有方法主体。
 * 
 * 
 * 抽象类的注意点：
 * 
 * 1、一个抽象类是不可以被实例化的，因为它不能表征一个具体的对象，只是描述一个对象的一些基本的特征。
 * 
 * 2、在面向对象领域，抽象类主要用来进行类型隐藏。我们可以构造出一个固定的一组行为的抽象描述，
 * 		但是这组行为却能够有任意个可能的具体实现方式。这个抽象描述就是抽象类，而这一组任意个可能的具体实现则表现为这个抽象类的所有派生类。
 * 3、接口和抽象类中的所有抽象方法不能有具体实现，而应在它们的子类中实现所有的抽象方法（要有函数体，哪怕{ }里是空的），ｊａｖａ的设计者
 * 		可能为抽象方法的灵活性考虑，每个子类可根据自己的需要来实现抽象方法。
 * */
public abstract class TestAbstractClass {
	
	public abstract void getWord();//声明一个抽象方法
	
	//抽象类中可以赋予非抽象方法方法的默认行为，即方法的具体实现
	public String extendMethod() {
		return "I'm a AbstractMethod!";
	}
	
	//普通数据成员
	public int i;
	
	//获得一个抽象方法
	public abstract String getUserName();
	
	//抽象类中可以赋予非抽象方法方法的默认行为，即方法的具体实现
	public String getPassword()
	{
		return "抽象类中可以赋予非抽象方法方法的默认行为，即方法的具体实现";
	}
}
